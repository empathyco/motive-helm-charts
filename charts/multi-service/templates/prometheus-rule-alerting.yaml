{{- if .Values.metrics.enabled -}}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "multi-service.fullname" . }}-alerting
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "multi-service.labels" . | nindent 4 }}
    {{- with .Values.metrics.prometheusRule.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  groups:
    - name: {{ include "multi-service.fullname" . }}-default-alerting
      rules:
        {{- if gt (.Values.replicaCount | int) 1 }}
        - alert: HighAvailability-{{ include "multi-service.fullname" . }}
          expr: sum(kube_pod_status_ready{namespace="{{ $.Release.Namespace }}", pod=~"{{ include "multi-service.fullname" . }}-.+", condition="true"}) < 2
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: 'Number of Pods < 2'
            description: 'Service reports having not enough pods to ensure High Availability'
        {{- end }}

        - alert: ZeroPods-{{ include "multi-service.fullname" . }}
          expr: sum(kube_pod_status_ready{namespace="{{ $.Release.Namespace }}", pod=~"{{ include "multi-service.fullname" . }}-.+", condition="true"}) == 0
          for: 0m
          labels:
            severity: critical
            oncall: 'true'
          annotations:
            summary: 'Number of Pods == 0'
            description: 'Service reports no pods running'

    {{ if .Values.metrics.prometheusRule.defaultAlerts.kafka.enabled }}
    - name: {{ include "multi-service.fullname" . }}-kafka-alerting
      rules:
        {{- if .Values.metrics.prometheusRule.defaultAlerts.kafka.deadLetter.enabled }}
        {{- with .Values.metrics.prometheusRule.defaultAlerts.kafka.deadLetter.topic }}
        - alert: DeadQueueItemsIncoming-{{ include "multi-service.fullname" $ }}
          expr: (kafka:topic:messages:in{topic="{{ . }}"} - kafka:topic:messages:in{topic="{{ . }}"} offset 5m) > 0
          for: 0m
          labels:
            severity: critical
            skip_resolved: 'true'
          annotations:
            summary: 'Topic "{{ . }}" has new incoming messages'
            description: 'Service reports there are new messages which could not be processed correctly'
        {{- end }}
        {{- end }}

        {{- if .Values.metrics.prometheusRule.defaultAlerts.kafka.lag.enabled }}
        {{- range .Values.metrics.prometheusRule.defaultAlerts.kafka.lag.topics }}
        - alert: TopicLag-{{ include "multi-service.fullname" $ }}
          expr: sum(kafka_consumergroup_lag{namespace="kafka-events", consumergroup="{{ $.Values.metrics.prometheusRule.defaultAlerts.kafka.lag.consumerGroup | required "consumerGroup is required" }}", topic="{{ .topic | required "topic is required" }}"}) > {{ .threshold | required "threshold is required" }}
          for: {{ .for | default "10s" }}
          labels:
            severity: critical
            skip_resolved: 'false'
          annotations:
            summary: 'Topic "{{ .topic }}" lag > {{ .threshold }}'
            description: 'Service reports there is lag consuming events from topic'
        {{- end }}
        {{- end }}
    {{ end }}

    {{ if and .Values.metrics.prometheusRule.enabled .Values.metrics.prometheusRule.alerting.rules }}
    - name: {{ include "multi-service.fullname" . }}-alerting
      rules:
        {{- with .Values.metrics.prometheusRule.alerting.rules }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{ end }}
{{ end }}